<h1 class="visibility-hidden">{{ help_center.name }}</h1>



<section id="main-content" class="section hero">
  <div class="hero-inner">
    <h1>Let's Get You Some Answers.</h1>
    <p>Our support articles library is regularly updated to ensure you have access to the latest information and support resources.</p>
    <div class="search-container">
      {{search submit=false instant=settings.instant_search class='search search-full' placeholder='Search for articles...'}}
      <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" focusable="false" viewBox="0 0 12 12" class="search-icon" aria-hidden="true">
        <circle cx="4.5" cy="4.5" r="4" fill="none" stroke="currentColor"/>
        <path stroke="currentColor" stroke-linecap="round" d="M11 11L7.5 7.5"/>
      </svg>
    </div>
    
  </div>
  <div id="statusio-bar" class="statusio-bar mx-auto">
    <div class="statusio-status">
      <span class="statusio-icon"></span>
      <span id="statusio-message">Checking system status...</span>
    </div>
  </div>
</section>

<div class="container">
  <section class="section knowledge-base">
    <h2 class="visibility-hidden">{{ t 'categories' }}</h2>

    <section class="categories blocks" id="categories-section">
      <ul class="blocks-list">
        {{#each categories}}
          {{#if ../has_multiple_categories}}
            <li class="blocks-item category-item" data-index="{{@index}}">
              <a href='{{url}}' class="blocks-item-link">
                <span class="blocks-item-title">{{name}}</span>
                <span class="blocks-item-description">{{excerpt description}}</span>
              </a>
            </li>
          {{else}}
            {{#each sections}}
              <li class="blocks-item category-item" data-index="{{@index}}">
                <a href='{{url}}' class="blocks-item-link">
                  <span class="blocks-item-title">
                    {{name}}
                  </span>
                  <span class="blocks-item-description">{{excerpt description}}</span>
                </a>
              </li>
            {{/each}}
          {{/if}}
        {{/each}}
      </ul>
      
      {{#if (compare categories.length ">" 8)}}
        <div class="see-more-container">
          <button class="button see-more-btn" id="see-more-btn">
            Show More
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="show-more-icon"><path d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"/></svg>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="show-less-icon" style="display: none;"><path d="M233.4 105.4c12.5-12.5 32.8-12.5 45.3 0l192 192c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L256 173.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l192-192z"/></svg>
          </button>
        </div>
      {{/if}}
      
      {{pagination}}
    </section>

    {{#if promoted_articles}}
      <section class="articles">
        <h2>{{t 'promoted_articles'}}</h2>
        <ul class="article-list promoted-articles">
          {{#each promoted_articles}}
            <li class="promoted-articles-item">
                <a href="{{url}}">
                  {{title}}

                  {{#if internal}}
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" focusable="false" viewBox="0 0 16 16" class="icon-lock" title="{{t 'internal'}}">
                      <rect width="12" height="9" x="2" y="7" fill="currentColor" rx="1" ry="1"/>
                      <path fill="none" stroke="currentColor" d="M4.5 7.5V4a3.5 3.5 0 017 0v3.5"/>
                    </svg>
                  {{/if}}
                </a>
            </li>
          {{/each}}
        </ul>
      </section>
    {{/if}}
  </section>
  <section class="section video-section">
    <div class="video-section-header">
      <h2 class="video-section-title">Check Out Our Videos On Vagaro University</h2>
      <div class="video-section-controls">
        <button class="glide__arrow glide__arrow--left" id="glide-prev">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="15 18 9 12 15 6"></polyline>
          </svg>
        </button>
        <button class="glide__arrow glide__arrow--right" id="glide-next">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="9 18 15 12 9 6"></polyline>
          </svg>
        </button>
      </div>
    </div>
    <div class="glide">
      <div class="glide__track" data-glide-el="track">
        <ul class="glide__slides">
          <!-- Video cards will be populated by JavaScript -->
        </ul>
      </div>
    </div>
  </section>

  {{#if help_center.community_enabled}}
    <section class="section home-section community">
      <h2>{{t 'community'}}</h2>
      {{#link 'community' class='community-link'}}
        {{t 'join_conversation'}}
      {{/link}}

      <div class="community-image"></div>
    </section>
  {{/if}}

  <section class="section home-section activity">
    {{#if settings.show_recent_activity}}
      {{recent_activity}}
    {{/if}}
  </section>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle the "Show More" button functionality
    var seeMoreBtn = document.getElementById('see-more-btn');
    var showMoreIcon = document.querySelector('.show-more-icon');
    var showLessIcon = document.querySelector('.show-less-icon');
    var categoryItems = document.querySelectorAll('.category-item');
    var showAll = false;
    
    if (seeMoreBtn) {
      // Initially hide items with index >= 8
      categoryItems.forEach(function(item) {
        var index = parseInt(item.getAttribute('data-index'));
        if (index >= 8) {
          item.style.display = 'none';
        }
      });
      
      seeMoreBtn.addEventListener('click', function() {
        showAll = !showAll;
        
        // Toggle text
        seeMoreBtn.textContent = showAll ? 'Show Less' : 'Show More';
        
        // Toggle icons
        if (showMoreIcon) showMoreIcon.style.display = showAll ? 'none' : 'inline-block';
        if (showLessIcon) showLessIcon.style.display = showAll ? 'inline-block' : 'none';
        
        // Toggle visibility of items
        categoryItems.forEach(function(item) {
          var index = parseInt(item.getAttribute('data-index'));
          if (index >= 8) {
            item.style.display = showAll ? 'block' : 'none';
          }
        });
      });
    }
    
    // Load video data from JSON file
    fetch('{{asset "videos.json"}}')
      .then(response => response.json())
      .then(videos => {
        const slidesContainer = document.querySelector('.glide__slides');
        
        // Clear existing slides
        slidesContainer.innerHTML = '';
        
        // Create video card for each item
        videos.forEach((video, index) => {
          // Determine which card style to use based on index
          let cardClass = 'video-card';
          if (index % 4 === 1) cardClass = 'video-card--purple';
          if (index % 4 === 2) cardClass = 'video-card--green';
          if (index % 4 === 3) cardClass = 'video-card--orange';
          
          const slide = document.createElement('li');
          slide.className = 'glide__slide';
          
          slide.innerHTML = `
            <a href="${video.url}" class="${cardClass}">
              <div class="${cardClass}-image-container">
                <img src="${video.thumbnail}" alt="${video.title}" class="${cardClass}-image">
              </div>
              <div class="video-card-content">
                <div class="video-card-category">${video.category}</div>
                <h3 class="video-card-title">${video.title}</h3>
              </div>
            </a>
          `;
          
          slidesContainer.appendChild(slide);
        });
        
        // Initialize Glide slider
        const glide = new Glide('.glide', {
          perView: 3.5,
          gap: 4,
          type: 'carousel',
          autoplay: 4000, // Auto-scroll every 4 seconds
          hoverpause: true, // Pause on hover
          animationDuration: 1000,
          breakpoints: {
            1200: { perView: 3 },
            992: { perView: 2 },
            576: { perView: 1 }
          }
        }).mount();

        // Add event listeners to the external controls
        document.getElementById('glide-prev').addEventListener('click', () => {
          glide.go('<');
        });
        
        document.getElementById('glide-next').addEventListener('click', () => {
          glide.go('>');
        });
      })
      .catch(error => {
        console.error('Error loading video data:', error);
      });
  });
</script>
