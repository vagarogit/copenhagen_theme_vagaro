  <meta charset="UTF-8">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">

  <!-- Open Graph Meta Tags -->
  <meta property="og:title" content="{{help_center.name}}" />
  <meta property="og:type" content="website" />
  <meta property="og:image" content="{{asset 'og-image.webp'}}" />
  <meta property="og:image:width" content="1200" />
  <meta property="og:image:height" content="630" />
  <meta property="og:image:alt" content="Vagaro Help Center" />

  <!-- Twitter Card Meta Tags -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="{{help_center.name}}" />
  <meta name="twitter:image" content="{{asset 'og-image.webp'}}" />

<link rel="shortcut icon" type="image/x-icon" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-fav.png">
<link rel="apple-touch-icon" sizes="57x57" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro57.png">
<link rel="apple-touch-icon" sizes="114x114" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro114.png">
<link rel="apple-touch-icon" sizes="72x72" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro72.png">
<link rel="apple-touch-icon" sizes="144x144" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro144.png">
<link rel="apple-touch-icon" sizes="60x60" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro60.png">
<link rel="apple-touch-icon" sizes="120x120" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro120.png">
<link rel="apple-touch-icon" sizes="76x76" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro76.png">
<link rel="apple-touch-icon" sizes="152x152" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro152.png">
<link rel="apple-touch-icon" sizes="180x180" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro180.png">
<link rel="icon" type="image/png" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro196.png" size="196x196">
<link rel="icon" type="image/png" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro160.png" size="160x160">
<link rel="icon" type="image/png" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro96.png" size="96x96">
<link rel="icon" type="image/png" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro16.png" size="16x16">
<link rel="icon" type="image/png" href="https://1a96a36bae7c8550901a-274b8a70320bb26e7a1e0ea7836ee429.ssl.cf2.rackcdn.com/Images/vagaro-logo-pro32.png" size="32x32">
  <link rel="stylesheet" href="{{asset 'inter-font.css'}}">
  <link rel="stylesheet" href="{{asset 'output.css'}}" />

   <script id="gtm-consent-defaults">
    window.dataLayer = window.dataLayer ||[];
    function gtag(){dataLayer.push(arguments);}
    gtag('consent','default',{
      'ad_storage':'denied',
      'analytics_storage':'denied',
      'ad_user_data':'denied',
      'ad_personalization':'denied',
      'personalization_storage':'denied',
      'functionality_storage':'granted',
      'security_storage':'granted',
      'wait_for_update': 500
    });
    gtag("set", "ads_data_redaction", true);
  </script>
  <!-- noinspection JSUnresolvedLibraryURL -->
  <script
    id="osano-script"
    src="https://cmp.osano.com/js1OYJVqiJ/4387eb79-890e-4da8-a04c-0e13ea701f15/osano.js"
    defer
    onload="
      setTimeout(function() {
        window.dispatchEvent(new CustomEvent('osano-script-loaded'));
      }, 2000);
    "
  ></script>


  <script src="https://cdn.jsdelivr.net/npm/@glidejs/glide/dist/glide.min.js"></script>
  <!-- Make the translated search clear button label available for use in JS -->
  <!-- See buildClearSearchButton() in script.js -->
  <script type="text/javascript">
    window.searchClearButtonLabelLocalized = "{{t 'search_clear'}}";
    // Make specific assets available to JavaScript
    window.arrowUpRightSvg = "{{asset 'arrow-up-right.svg'}}";
  </script>
  <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
<link rel="stylesheet" href="https://use.typekit.net/zrd5zcu.css">
  <script type="text/javascript">
    // Load ES module polyfill only for browsers that don't support ES modules
    if (!(HTMLScriptElement.supports && HTMLScriptElement.supports('importmap'))) {
      document.write('<script async src="{{asset "es-module-shims.js"}}"><\/script>');
    }
  </script>

  <!-- Google Tag Manager -->
  <!-- Load GTM after Osano consent is ready to ensure proper consent mode sequencing -->
  <script>
    (function() {
      function loadGTM() {
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-5QW5SZB');
      }
      
      // Wait for Osano to load and update consent before loading GTM
      if (window.Osano) {
        loadGTM();
      } else {
        window.addEventListener('osano-script-loaded', function() {
          loadGTM();
        });
      }
    })();
  </script>
  <!-- End Google Tag Manager -->

  <script type="importmap">
{
  "imports": {
    "new-request-form": "{{asset 'new-request-form-bundle.js'}}",
    "flash-notifications": "{{asset 'flash-notifications-bundle.js'}}",
    "category-accordions": "{{asset 'category-accordions-bundle.js'}}",
    "article-accordions": "{{asset 'article-accordions-bundle.js'}}",
    "new-request-form-translations": "{{asset 'new-request-form-translations-bundle.js'}}",
    "shared": "{{asset 'shared-bundle.js'}}",
    "af": "{{asset 'af-bundle.js'}}",
    "ar-x-pseudo": "{{asset 'ar-x-pseudo-bundle.js'}}",
    "ar": "{{asset 'ar-bundle.js'}}",
    "az": "{{asset 'az-bundle.js'}}",
    "be": "{{asset 'be-bundle.js'}}",
    "bg": "{{asset 'bg-bundle.js'}}",
    "bn": "{{asset 'bn-bundle.js'}}",
    "bs": "{{asset 'bs-bundle.js'}}",
    "ca": "{{asset 'ca-bundle.js'}}",
    "cs": "{{asset 'cs-bundle.js'}}",
    "cy": "{{asset 'cy-bundle.js'}}",
    "da": "{{asset 'da-bundle.js'}}",
    "de-x-informal": "{{asset 'de-x-informal-bundle.js'}}",
    "de": "{{asset 'de-bundle.js'}}",
    "el": "{{asset 'el-bundle.js'}}",
    "en-001": "{{asset 'en-001-bundle.js'}}",
    "en-150": "{{asset 'en-150-bundle.js'}}",
    "en-au": "{{asset 'en-au-bundle.js'}}",
    "en-my": "{{asset 'en-my-bundle.js'}}",
    "en-ph": "{{asset 'en-ph-bundle.js'}}",
    "en-se": "{{asset 'en-se-bundle.js'}}",
    "en-x-dev": "{{asset 'en-x-dev-bundle.js'}}",
    "en-x-keys": "{{asset 'en-x-keys-bundle.js'}}",
    "en-x-obsolete": "{{asset 'en-x-obsolete-bundle.js'}}",
    "en-x-pseudo": "{{asset 'en-x-pseudo-bundle.js'}}",
    "en-x-test": "{{asset 'en-x-test-bundle.js'}}",
    "es-419": "{{asset 'es-419-bundle.js'}}",
    "es-es": "{{asset 'es-es-bundle.js'}}",
    "es": "{{asset 'es-bundle.js'}}",
    "et": "{{asset 'et-bundle.js'}}",
    "eu": "{{asset 'eu-bundle.js'}}",
    "fa-af": "{{asset 'fa-af-bundle.js'}}",
    "fa": "{{asset 'fa-bundle.js'}}",
    "fi": "{{asset 'fi-bundle.js'}}",
    "fil": "{{asset 'fil-bundle.js'}}",
    "fo": "{{asset 'fo-bundle.js'}}",
    "fr-ca": "{{asset 'fr-ca-bundle.js'}}",
    "fr": "{{asset 'fr-bundle.js'}}",
    "ga": "{{asset 'ga-bundle.js'}}",
    "he": "{{asset 'he-bundle.js'}}",
    "hi": "{{asset 'hi-bundle.js'}}",
    "hr": "{{asset 'hr-bundle.js'}}",
    "hu": "{{asset 'hu-bundle.js'}}",
    "hy": "{{asset 'hy-bundle.js'}}",
    "id": "{{asset 'id-bundle.js'}}",
    "is": "{{asset 'is-bundle.js'}}",
    "it-ch": "{{asset 'it-ch-bundle.js'}}",
    "it": "{{asset 'it-bundle.js'}}",
    "ja": "{{asset 'ja-bundle.js'}}",
    "ka": "{{asset 'ka-bundle.js'}}",
    "kk": "{{asset 'kk-bundle.js'}}",
    "kl-dk": "{{asset 'kl-dk-bundle.js'}}",
    "ko": "{{asset 'ko-bundle.js'}}",
    "ku": "{{asset 'ku-bundle.js'}}",
    "lt": "{{asset 'lt-bundle.js'}}",
    "lv": "{{asset 'lv-bundle.js'}}",
    "mk": "{{asset 'mk-bundle.js'}}",
    "mn": "{{asset 'mn-bundle.js'}}",
    "ms": "{{asset 'ms-bundle.js'}}",
    "mt": "{{asset 'mt-bundle.js'}}",
    "my": "{{asset 'my-bundle.js'}}",
    "nl-be": "{{asset 'nl-be-bundle.js'}}",
    "nl": "{{asset 'nl-bundle.js'}}",
    "no": "{{asset 'no-bundle.js'}}",
    "pl": "{{asset 'pl-bundle.js'}}",
    "pt-br": "{{asset 'pt-br-bundle.js'}}",
    "pt": "{{asset 'pt-bundle.js'}}",
    "ro": "{{asset 'ro-bundle.js'}}",
    "ru": "{{asset 'ru-bundle.js'}}",
    "sk": "{{asset 'sk-bundle.js'}}",
    "sl": "{{asset 'sl-bundle.js'}}",
    "sq": "{{asset 'sq-bundle.js'}}",
    "sr-me": "{{asset 'sr-me-bundle.js'}}",
    "sr": "{{asset 'sr-bundle.js'}}",
    "sv": "{{asset 'sv-bundle.js'}}",
    "th": "{{asset 'th-bundle.js'}}",
    "tr": "{{asset 'tr-bundle.js'}}",
    "uk": "{{asset 'uk-bundle.js'}}",
    "ur": "{{asset 'ur-bundle.js'}}",
    "uz": "{{asset 'uz-bundle.js'}}",
    "vi": "{{asset 'vi-bundle.js'}}",
    "zh-cn": "{{asset 'zh-cn-bundle.js'}}",
    "zh-tw": "{{asset 'zh-tw-bundle.js'}}"
  }
}
</script>
</head>
<body>
  <!-- Google Tag Manager (noscript) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5QW5SZB"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
  <script type="module">
    import { renderFlashNotifications } from "flash-notifications";
    // 'settings' and the translated 'close' label are injected via server-side templating.
    const settings = {{json settings}};
    const closeLabel = {{json (t 'close')}};

    renderFlashNotifications(settings, closeLabel);
  </script>
  <script src="{{asset 'statusio.js'}}"></script>
  <!-- Replaced with Radix Accordion implementation -->
  <!-- <script src="{{asset 'sub-topic-accordions-fix.js'}}"></script> -->
  <script type="module">
    // Import the new Radix-based article accordions
    import "article-accordions";
  </script>
  <script src="{{asset 'tabbed-article.js'}}"></script>
  <script src="{{asset 'article-toc.js'}}"></script>

  <!-- Ensure main-content anchor always exists for skip navigation -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      if (!document.getElementById('main-content')) {
        // Create a fallback main-content element if it doesn't exist
        const mainContent = document.createElement('div');
        mainContent.id = 'main-content';
        mainContent.setAttribute('tabindex', '-1');

        // Find the first meaningful content element to use as main content
        const contentSelectors = [
          '.container',
          '.section',
          'main',
          'article',
          '.content',
          'body > div:first-child'
        ];

        let targetElement = null;
        for (const selector of contentSelectors) {
          targetElement = document.querySelector(selector);
          if (targetElement) break;
        }

        if (targetElement && targetElement.parentNode) {
          targetElement.parentNode.insertBefore(mainContent, targetElement);
        } else {
          document.body.appendChild(mainContent);
        }
      }
    });
  </script>



